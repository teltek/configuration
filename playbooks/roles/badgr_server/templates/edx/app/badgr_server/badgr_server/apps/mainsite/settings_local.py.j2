# settings_local.py is for all instance specific settings

from settings import *
from mainsite import TOP_DIR

DEBUG = {{ BADGR_SERVER_DEBUG }}
TEMPLATE_DEBUG = DEBUG
DEBUG_ERRORS = DEBUG
DEBUG_STATIC = DEBUG
DEBUG_MEDIA = DEBUG

TIME_ZONE = '{{ BADGR_SERVER_TIME_ZONE }}'
LANGUAGE_CODE = '{{ BADGR_SERVER_LANGUAGE_CODE }}'

DATABASES = {{ BADGR_SERVER_DATABASES }}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': '',
        'TIMEOUT': 300,
        'KEY_PREFIX': '',
        'VERSION': 1,
    }
}

# celery
BROKER_URL = '{{ BADGR_SERVER_BROKER_URL }}'
CELERY_RESULT_BACKEND = '{{ BADGR_SERVER_CELERY_RESULT_BACKEND }}'
CELERY_TASK_SERIALIZER = '{{ BADGR_SERVER_CELERY_TASK_SERIALIZER }}'
CELERY_RESULTS_SERIALIZER = '{{ BADGR_SERVER_CELERY_RESULTS_SERIALIZER }}'
CELERY_ACCEPT_CONTENT = {{ BADGR_SERVER_CELERY_ACCEPT_CONTENT }}

HTTP_ORIGIN = '{{ BADGR_SERVER_HTTP_ORIGIN }}'

# Optionally restrict issuer creation to accounts that have the 'issuer.add_issuer' permission
BADGR_APPROVED_ISSUERS_ONLY = {{ BADGR_SERVER_BADGR_APPROVED_ISSUERS_ONLY }}

# If you have an informational front page outside the Django site that can link back to '/login', specify it here 
ROOT_INFO_REDIRECT = '{{ BADGR_SERVER_ROOT_INFO_REDIRECT }}'

LOGS_DIR = '{{ badgr_server_log_dir }}'

# Run celery tasks in same thread as webserver
CELERY_ALWAYS_EAGER = {{ BADGR_SERVER_CELERY_ALWAYS_EAGER }}

EMAIL_BACKEND = '{{ BADGR_SERVER_EMAIL_BACKEND }}'
DEFAULT_FROM_EMAIL = '{{ BADGR_SERVER_DEFAULT_FROM_EMAIL }}'

# LOGS_DIR = os.path.join(TOP_DIR, 'logs')
# if not os.path.exists(LOGS_DIR):
#     os.makedirs(LOGS_DIR)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': [],
            'class': 'django.utils.log.AdminEmailHandler'
        },

        # badgr events log to disk by default
        'badgr_events': {
            'level': 'INFO',
            'formatter': 'json',
            'class': 'logging.FileHandler',
            'filename': '/edx/var/log/supervisor/badgr_server-stdout.log',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },

        # Badgr.Events emits all badge related activity
        'Badgr.Events': {
            'handlers': ['badgr_events'],
            'level': 'INFO',
            'propagate': False,

        }

    },
    'formatters': {
        'default': {
            'format': '%(asctime)s %(levelname)s %(module)s %(message)s'
        },
        'json': {
            '()': 'mainsite.formatters.JsonFormatter',
            'format': '%(asctime)s',
            'datefmt': '%Y-%m-%dT%H:%M:%S%z',
        }
    },
}

