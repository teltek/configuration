---
# This key is only needed if you are pulling down a private
# badgr server repo
- name: Install read-only ssh key for the badgr_ui repo
  copy:
    content: "{{ BADGR_SERVER_GIT_IDENTITY }}"
    dest: "{{ badgr_server_git_identity }}"
    force: yes
    owner: "{{ badgr_server_user }}"
    mode: "0600"
  when: BADGR_SERVER_GIT_IDENTITY != "none"

- name: "First Checkout badgr ui repo into {{ badgr_ui_code_dir }}"
  git:
    dest: "{{ badgr_ui_code_dir }}"
    repo: "{{ badgr_ui_repo }}"
    version: "{{ badgr_ui_version }}"
    accept_hostkey: yes
  become_user: "{{ badgr_server_user }}"
  environment:
    GIT_SSH: "{{ badgr_server_git_ssh }}"
  register: badgr_ui_checkout
  when: BADGR_SERVER_GIT_IDENTITY != "none"

- name: Check if badgr ui directory exists
  stat:
    path: "{{ badgr_ui_code_dir }}"
  register: directory_details

- name: Checkout badgr ui repo service configurations into {{ badgr_ui_code_dir }}
  shell: "git checkout ."
  args:
    chdir: "{{ badgr_ui_code_dir }}"
  become_user: "{{ badgr_server_user }}"
  register: badgr_ui_checkout
  when: BADGR_SERVER_GIT_IDENTITY == "none" and directory_details.stat.exists and directory_details.stat.isdir

- name: Checkout badgr ui repo into {{ badgr_ui_code_dir }}
  git:
    dest: "{{ badgr_ui_code_dir }}"
    repo: "{{ badgr_ui_repo }}"
    version: "{{ badgr_ui_version }}"
    accept_hostkey: yes
  become_user: "{{ badgr_server_user }}"
  register: badgr_ui_checkout
  when: BADGR_SERVER_GIT_IDENTITY == "none"

- name: Remove read-only ssh key for the badgr_ui repo
  file:
    path: "{{ badgr_server_git_identity }}"
    state: absent
  when: BADGR_SERVER_GIT_IDENTITY != "none"

- name: Install nodejs for badgr ui
  apt:
    name: "nodejs"
    install_recommends: yes
    state: present
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: Install npm for badgr ui
  apt:
    name: "npm"
    install_recommends: yes
    state: present
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: Fix Install npm nodejs for badgr ui I
  shell: "npm cache clean -f"
  become_user: "root"

- name: Fix Install npm nodejs for badgr ui II
  shell: "npm install -g n"
  become_user: "root"

- name: Fix Install npm nodejs for badgr ui III
  shell: "n stable"
  become_user: "root"

- name: npm install dependencies for badgr ui
  shell: "npm install"
  args:
    chdir: "{{ badgr_ui_code_dir }}"
  environment: "{{ badgr_server_environment }}"
  become_user: "{{ badgr_server_user }}"

- name: Create badgr ui application config settings local file
  template:
    src: "{{ badgr_ui_template_settings_dir }}/{{ item.src }}"
    dest: "{{ badgr_ui_settings_dir }}/{{ item.dest }}"
    owner: "{{ badgr_server_user }}"
    group: "{{ common_web_user }}"
    mode: "0640"
  with_items:
    - { src: 'config.service.ts.j2', dest: 'config.service.ts' }

- name: Build badgr ui server
  shell: "npm run build:prod"
  args:
    chdir: "{{ badgr_ui_code_dir }}"
  environment: "{{ badgr_server_environment }}"
  become_user: "{{ badgr_server_user }}"

- name: Copy config.js to dist in badgr ui
  shell: "cp src/config.js dist"
  args:
    chdir: "{{ badgr_ui_code_dir }}"
  environment: "{{ badgr_server_environment }}"
  become_user: "{{ badgr_server_user }}"

